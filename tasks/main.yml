---
# tasks file for storage
- name: Package
  package:
    name: lvm2
  when:
    - storage_conf is search ("lv_name")
  tags:
    - storage
    - package
    - dependencies

- name: Package
  package:
    name: xfsprogs
  when:
    - storage_conf is search ("xfs")
  tags:
    - storage
    - package

- name: Package facts
  ansible.builtin.package_facts:
  tags:
    - storage
    - facts

- name: Logical Volume Manager
  when:
    - "'lvm2' in ansible_facts.packages"
  tags:
    - storage
    - lvm
  block:
    - name: Volume group
      community.general.lvg:
        vg: '{{ item.vg_name }}'
        pvs: '{{ item.pvs }}'
      loop: '{{ storage_conf }}'
      register: vg
      when:
        - item.pvs is defined
        - item.pvs | length > 0
      tags:
        - vg

    - name: Logical volume
      community.general.lvol:
        pvs: '{{ item.pvs | default(omit) }}'
        vg: '{{ item.vg_name }}'
        lv: '{{ item.lv_name }}'
        size: '{{ item.lv_size }}'
        state: "{{ item.state | default(omit) }}"
        force: "{{ item.force | default(omit) }}"
      loop: '{{ storage_conf }}'
      register: lv
      ignore_errors: true
      when:
        - vg is succeeded
      tags:
        - lv

- name: Filesystem
  community.general.filesystem:
    dev: "/dev/mapper/{{ item.vg_name }}-{{ item.lv_name }}"
    fstype: "{{ item.fs_type }}"
    resizefs: true
    state: "{{ item.state | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
  loop: "{{ storage_conf }}"
  register: fs
  ignore_errors: true
  when:
    - not ansible_check_mode
    - lv is changed
    - item.fs_type is defined
  tags:
    - storage
    - fs

- name: Mount
  ansible.posix.mount:
    path: '{{ item.fs_mountpoint }}'
    src: '/dev/mapper/{{ item.vg_name }}-{{ item.lv_name }}'
    fstype: '{{ item.fs_type }}'
    state: "{{ item.state | default('mounted') }}"
    opts: '{{ item.fs_mountoptions | default(omit) }}'
    dump: '{{ item.fs_dump | default(omit) }}'
    passno: '{{ item.fs_passno | default(omit) }}'
  loop: '{{ storage_conf }}'
  when:
    - item.fs_mountpoint is defined
    - item.fs_src is undefined
  notify: systemd reload
  tags:
    - storage
    - mount

- name: Mount
  ansible.posix.mount:
    path: '{{ item.fs_mountpoint }}'
    src: '{{ item.fs_src }}'
    fstype: '{{ item.fs_type }}'
    state: "{{ item.state | default('mounted') }}"
    opts: '{{ item.fs_mountoptions | default(omit) }}'
    dump: '{{ item.fs_dump | default(omit) }}'
    passno: '{{ item.fs_passno | default(omit) }}'
  loop: '{{ storage_conf }}'
  when:
    - item.fs_mountpoint is defined
    - item.fs_src is defined
  notify: systemd reload
  tags:
    - storage
    - mount

- name: "Filesystem (xfs on buster)"
  command: 'xfs_growfs {{ item.fs_mountpoint }}'
  loop: '{{ storage_conf }}'
  when:
    - not ansible_check_mode
    - lv is changed
    - item.fs_mountpoint is defined
    - item.fs_type is defined
    - item.fs_type == 'xfs'
    - ansible_distribution_release in [ 'buster', 'sid' ]
  tags:
    - storage
    - fs
    - resize
